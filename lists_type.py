'=========List======='
# списки - изменяемый , индексируемый, упорядоченный, интерируемый тип данных, предназначенный для хранения любых данных в определенном порядке
list1 = [34,5,0, [1, 2, 3], 'makers', 'num'[True, False, None]] 
print(list1[2: -1])
print(list1[-1])

string ='hello'
res = list(string)
print(res) #[]

list_ = []
list_ = list()
list_ = [2] * 10
print(list_)

'========= Mетоды списков======='
# append - добавление элементы в конец 
list_ = []
list_.append(True)
list_.append('text')
list_.append(123)
list_.append([1,2,3])
print(list_) 

# pop - удаляет элементы из списка по индексу и возвращает удаленный элемент если не передать тндекс в скобки то удаляет последний элемент

list_ = [5,5,5,5,5,5,5,5]
rm_elem = list_.pop(3)


# remove - удаление элемента из списка по значению

# list_ = [12,'makers' , 234, True, 0, 1, 1, 1]
# list_.remove('makers')
# print(list_)


# count - метод, который считает еол-во элементов в списке

# list_ = [0,12, 'hi', True, False, True, 0, 1, 1, 0]
# count_of_elem = list_.count(1)
# print(count_of_elem) # 4

'----------------------'
# index - возврощает индекс первого вхождения указанного элемента


list_ = [12,1,1,1,'hi', None]
index_ = list_.index('hi')
print(index_) #4

'----------------------'
# #insert - добавляет элемент в список по указонному индексу
# list_ = [87, 11, 23, 'hi', 5, 1, True, 'world']
# list1.insert(4, True)
# print(list_)

'--------------------------'
# extend - добовляет элементы списка в другой список
# list1 = [0, 0, 0]
# list2 = [1, 2, 3]
# list1.append(list2) # [0,0,0, [1, 2, 3]]
# list1.extend(list2) # [0, 0, 0, 1, 2, 3]
# print(list1)

'---------------------------'
#reverse - расставляет элементы в обратном порядке

list_ = [1,2,3,4, None, [1, 2, 3]]
list_.reverse()
print(list_) # [[1, 2, 3], None, 4, 3,2,1]

'------------------------------'
#sort - сортирует сисок, состоящий из элементов одного типа данных

# list_ = [23, 1, 24, 23, 123, 0]
# list_.sort()
# print(list_) # [0, 1, 23, 23, 24, 123]

# list_= ['hi', 'makers', 'hello', 'world']
# list_.sort()
# print(list_) 


'=================Tuple=============='
# кортеж -тупорядоченный, неизменяемый, итерируемый тип данных, литералы (,)

tuple_ = (1, 2, 3, True, )


